name: PR Review Check by Reactions

on:
  reaction:
    types: [created, deleted]

env:
  REVIEW_COMMENT_TEXT: '[–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –î–õ–Ø –†–ï–í–¨–Æ - –°–¢–ê–í–¨ üëç]'
  APPROVE_COUNT: 1
  BOT_LOGIN: 'github-actions[bot]'

jobs:
  count_reactions:
    runs-on: ubuntu-latest
    steps:
      - name: –ù–∞–π—Ç–∏ id auto-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è —Ä–µ–≤—å—é
        id: find_comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BOT_LOGIN: ${{ env.BOT_LOGIN }}
          REVIEW_COMMENT_TEXT: ${{ env.REVIEW_COMMENT_TEXT }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          REVIEW_COMMENT_ID=$(gh api "repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
            --jq '.[] | select(.user.login=="'"$BOT_LOGIN"'" and .body=="'"$REVIEW_COMMENT_TEXT"'") | .id' | tail -1)
          echo "REVIEW_COMMENT_ID=$REVIEW_COMMENT_ID" >> $GITHUB_ENV

      - name: –°–æ—Å—á–∏—Ç–∞—Ç—å –ª–∞–π–∫–∏ –ø–æ–¥ —ç—Ç–∏–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPROVE_COUNT: ${{ env.APPROVE_COUNT }}
        run: |
          if [[ -z "$REVIEW_COMMENT_ID" ]]; then
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∞–≤—Ç–æ-–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–Ω —Å–æ–∑–¥–∞–Ω."
            exit 1
          fi
          REACTIONS=$(gh api "/repos/${{ github.repository }}/issues/comments/$REVIEW_COMMENT_ID/reactions" \
            --jq '.[] | select(.content == "+1") | .id' --paginate)
          COUNT=$(echo "$REACTIONS" | wc -l)
          echo "üëç reactions count: $COUNT"
          if [ "$COUNT" -ge "$APPROVE_COUNT" ]; then
            echo "ü§© Review completed!"
            exit 0
          else
            echo "üôÅ Not enough reactions"
            exit 1
          fi
